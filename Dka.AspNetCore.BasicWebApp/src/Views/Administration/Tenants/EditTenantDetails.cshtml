@using Dka.AspNetCore.BasicWebApp.Common.Models.Authorization
@using Dka.AspNetCore.BasicWebApp.Common.Models.Tenants
@using Dka.AspNetCore.BasicWebApp.Models.Constants
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService;

@model Dka.AspNetCore.BasicWebApp.ViewModels.Tenants.EditTenantViewModel
@{
    ViewData[ViewDataKeys.HtmlPageHeadSectionTitle] = "Edit tenant details";
    ViewData[ViewDataKeys.HtmlPageTopHeaderTitle] = "Edit tenant details";
    ViewData[ViewDataKeys.ActiveNavigationLink] = "administration";
}
@if (Model != null)
{
    <form asp-controller="Tenants" asp-action="edit" method="post">
        <div class="row">
            <div class="col-sm-12 text-sm-center">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-sm-6 text-sm-right">
                <label asp-for="@Model.Alias" class="font-weight-bold"></label>
            </div>
            <div class="col-sm-6">
                <input asp-for="@Model.Alias" class="form-control"/>
                <span asp-validation-for="@Model.Alias" class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-sm-6 text-sm-right">
                <label asp-for="@Model.Name" class="font-weight-bold"></label>
            </div>
            <div class="col-sm-6">
                <input asp-for="@Model.Name" class="form-control"/>
                <span asp-validation-for="@Model.Name" class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-sm-12">
                <div class="d-flex justify-content-sm-between">
                    <div></div>
                    <div>
                        <a asp-controller="Tenants" asp-action="details" asp-route-guid="@ViewContext.RouteData.Values["guid"]" class="btn btn-outline-secondary dka-btn">Cancel</a>

                        @if ((await AuthorizationService.AuthorizeAsync(Context.User, Model, new DataOperationRequirement(nameof(Tenant), DataOperationNames.Update))).Succeeded)
                        {
                            <button type="submit" asp-controller="Tenants" asp-action="edit" asp-route-guid="@ViewContext.RouteData.Values["guid"]" class="btn btn-outline-secondary dka-btn">Save</button>
                        }
                    </div>

                    @if ((await AuthorizationService.AuthorizeAsync(Context.User, Model, new DataOperationRequirement(nameof(Tenant), DataOperationNames.Delete))).Succeeded)
                    {
                        <button type="submit" asp-controller="Tenants" asp-action="delete" asp-route-guid="@ViewContext.RouteData.Values["guid"]" class="btn btn-outline-danger dka-btn ml-auto ml-sm-0">Remove</button>
                    }
                </div>
            </div>
        </div>
    </form>
}
else
{
    <div class="row mb-3 mb-sm-2">
        <div class="col-sm-12 text-sm-center">
            <p>
                Tenant not found
            </p>
            <a asp-action="index" class="btn btn-outline-secondary dka-btn">Back</a>
        </div>
    </div>
}