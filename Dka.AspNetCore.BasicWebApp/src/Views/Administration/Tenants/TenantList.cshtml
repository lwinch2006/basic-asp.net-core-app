@using Dka.AspNetCore.BasicWebApp.Common.Models.Authorization
@using Dka.AspNetCore.BasicWebApp.Common.Models.Tenants
@using Dka.AspNetCore.BasicWebApp.Models.Constants
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService;

@model IEnumerable<Tenant>
@{
    ViewData[ViewDataKeys.HtmlPageHeadSectionTitle] = "Tenant list";
    ViewData[ViewDataKeys.HtmlPageTopHeaderTitle] = "Tenant list";
    ViewData[ViewDataKeys.ActiveNavigationLink] = "administration";
}
<div class="row mb-2">
    <div class="col-sm-12">
        <table class="table">
            <thead>
            <tr>
                <th>
                    #
                </th>
                <th>
                    Alias
                </th>
                <th>
                    Name
                </th>
                <th>
                </th>
            </tr>
            </thead>
            <tbody>
            @{
                for (var i = 0; i < Model?.Count(); i++)
                {
                    <tr>
                        <td>
                            @(i + 1)
                        </td>
                        <td>
                            @Model.ElementAt(i).Alias
                        </td>
                        <td>
                            @Model.ElementAt(i).Name
                        </td>
                        <td>
                            @if ((await AuthorizationService.AuthorizeAsync(Context.User, Model, new DataOperationRequirement(nameof(Tenant), DataOperationNames.Read))).Succeeded)
                            {
                                <a asp-controller="Tenants" asp-action="details" asp-route-guid="@Model.ElementAt(i).Guid">details</a>
                            }
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="d-flex">
            <a asp-controller="Administration" asp-action="Index" class="btn btn-outline-secondary">Back</a>

            @if ((await AuthorizationService.AuthorizeAsync(Context.User, Model, new DataOperationRequirement(nameof(Tenant), DataOperationNames.Create))).Succeeded)
            {
                <a asp-controller="Tenants" asp-action="new" class="btn btn-outline-secondary ml-auto">Add new tenant</a>
            }
        </div>
    </div>
</div>